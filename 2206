#include<stdio.h>
#include<queue>

using namespace std;

typedef struct {
	int x;
	int y;
	int count;
}mp;

int n, m;
int map[1010][1010];
int result[1010][1010][2];
int x_dir[4] = { 1,-1,0,0 };
int y_dir[4] = { 0,0,1,-1 };

queue<mp> q;

int bfs(int x, int y) {

	q.push({ x,y,0 });
	result[x][y][0] = 1;

	while (!q.empty()) {
		int cur_x = q.front().x;
		int cur_y = q.front().y;
		int cur_count = q.front().count;

		q.pop();

		if (cur_x == n - 1 && cur_y == m - 1) {
			return result[cur_x][cur_y][cur_count];
		}

		for (int i = 0; i < 4; i++) {
			int new_x = cur_x + x_dir[i];
			int new_y = cur_y + y_dir[i];

			if (new_x >= 0 && new_y >= 0 && new_x < n && new_y < m) {
				if (map[new_x][new_y] == 1 && cur_count == 0) {
					result[new_x][new_y][cur_count + 1] = result[cur_x][cur_y][cur_count] + 1;
					q.push({ new_x,new_y,cur_count + 1 });
				}
				else if (map[new_x][new_y] == 0 && result[new_x][new_y][cur_count] == 0) {

					result[new_x][new_y][cur_count] = result[cur_x][cur_y][cur_count] + 1;
					q.push({ new_x,new_y,cur_count });
				}
			}
		}
	}

	return -1;
}

int main(void) {

	scanf("%d %d", &n, &m);

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			scanf("%1d", &map[i][j]);
		}
	}

	printf("%d\n", bfs(0, 0));

	return 0;
}