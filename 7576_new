#include<stdio.h>
#include<queue>

using namespace std;

typedef struct {
	int x;
	int y;
}input;

int insert[1010][1010];
int m, n;
int zero_count = 0;
int x_dir[4] = { 1,-1,0,0 };
int y_dir[4] = { 0,0,1,-1 };

queue<input> q;

int bfs(void) {

	int day = 0;

	while (q.empty() != true) {

		int size = q.size();


		while (size--) {
			int x = q.front().x;
			int y = q.front().y;
			q.pop();

			for (int i = 0; i < 4; i++) {
				int cur_x = x + x_dir[i];
				int cur_y = y + y_dir[i];

				if (cur_x<n&&cur_y<m&&cur_x>=0&&cur_y>=0&&insert[cur_x][cur_y] == 0) {
					insert[cur_x][cur_y] = 1;
					q.push({ cur_x,cur_y });
					zero_count--;
				}
			}
		}

		day++;

		if (zero_count <= 0) {
			return day;
		}
	}


	return -1;
}

int main(void) {

	scanf("%d %d", &m, &n);

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			scanf("%d", &insert[i][j]);

			if (insert[i][j] == 0) {
				zero_count++;
			}

			if (insert[i][j] == 1) {
				q.push({ i,j });
			}
		}
	}

	if (zero_count == 0) {
		printf("0\n");
	}
	else {
		printf("%d\n", bfs());
	}

	return 0;
}