#include<stdio.h>

long long int result[5][5];
long long int insert[5][5];

void func(long long int n) {

	if (n == 1) {
		result[0][0] = 1;
		result[0][1] = 1;
		result[1][0] = 1;
		result[1][1] = 0;

		return;
	}

	if (n % 2 == 0) {
		func(n / 2);

		long long int res_copy[5][5];
		res_copy[0][0] = result[0][0];
		res_copy[0][1] = result[0][1];
		res_copy[1][0] = result[1][0];
		res_copy[1][1] = result[1][1];

		for (int i = 0; i < 2; i++) {
			for (int j = 0; j < 2; j++) {
				result[i][j] = 0;
			}
		}

		for (int i = 0; i < 2; i++) {
			for (int j = 0; j < 2; j++) {
				for (int t = 0; t < 2; t++) {
					result[i][j] += ((res_copy[i][t] * res_copy[t][j])% 1000000007);
				}
			}
		}
	}
	else {
		func(n - 1);

		long long int res_copy[5][5];
		res_copy[0][0] = result[0][0];
		res_copy[0][1] = result[0][1];
		res_copy[1][0] = result[1][0];
		res_copy[1][1] = result[1][1];

		for (int i = 0; i < 2; i++) {
			for (int j = 0; j < 2; j++) {
				result[i][j] = 0;
			}
		}

		for (int i = 0; i < 2; i++) {
			for (int j = 0; j < 2; j++) {
				for (int t = 0; t < 2; t++) {
					result[i][j] += ((insert[i][t] * res_copy[t][j]) % 1000000007);
				}
			}
		}
	}
}

int main(void) {

	long long int n;

	scanf("%lld", &n);

	insert[0][0] = 1;
	insert[0][1] = 1;
	insert[1][0] = 1;
	insert[1][1] = 0;

	func(n);

	printf("%lld\n", (result[1][0]) % 1000000007);

	return 0;
}