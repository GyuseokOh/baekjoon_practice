#include<stdio.h>

struct s {
	int x;
	int y;
	int dir;
	bool live;
};

int insert[10][10];
int xdir[9] = { 0,-1,-1,0,1,1,1,0,-1 };
int ydir[9] = { 0,0,-1,-1,-1,0,1,1,1 };
int result = -1;
s fish[20];

void dfs(int x, int y, int dir, int sum) {

	//printf("x : %d, y : %d, dir : %d, sum : %d\n",x,y,dir,sum);

	int cinsert[10][10];
	s cfish[20];

	if (sum > result) {
		result = sum;
	}

	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++) {
			cinsert[i][j] = insert[i][j];
		}
	}

	for (int i = 1; i <= 16; i++) {
		cfish[i] = fish[i];
	}

	for (int i = 1; i <= 16; i++) {
		if (fish[i].live == true) {
			//printf("i :%d\n", i);
			int curx = fish[i].x;
			int cury = fish[i].y;
			int curdir = fish[i].dir;
			for (int i = 0; i < 8; i++) {
				int newx = curx + xdir[curdir];
				int newy = cury + ydir[curdir];

				if (newx >= 0 && newy >= 0 && newx < 4 && newy < 4) {
					if (insert[newx][newy] == 0) {
						int temp = insert[curx][cury];
						fish[insert[curx][cury]].dir = curdir;

						insert[newx][newy] = temp;
						insert[curx][cury] = 0;
						fish[temp].x = newx;
						fish[temp].y = newy;

						break;
					}
					else if (insert[newx][newy] != -1) {
						int temp = insert[curx][cury];
						fish[insert[curx][cury]].dir = curdir;

						insert[curx][cury] = insert[newx][newy];
						insert[newx][newy] = temp;

						fish[insert[curx][cury]].x = curx;
						fish[insert[curx][cury]].y = cury;
						fish[insert[newx][newy]].x = newx;
						fish[insert[newx][newy]].y = newy;
						break;
					}
				}
				curdir++;
				if (curdir == 9) {
					curdir = 1;
				}
			}

			/*printf("curdir : %d\n", curdir);
			for (int i = 0; i < 4; i++) {
				for (int j = 0; j < 4; j++) {
					printf("%d ", insert[i][j]);
				}
				printf("\n");
			}
			printf("\n");

			printf("dir\n");
			for (int i = 0; i < 4; i++) {
				for (int j = 0; j < 4; j++) {
					printf("%d ", fish[insert[i][j]].dir);
				}
				printf("\n");
			}
			printf("\n");*/
		}
	}

	for (int i = 1; i <= 3; i++) {
		int newx = x + xdir[dir] * i;
		int newy = y + ydir[dir] * i;
		
		if (newx >= 0 && newy >= 0 && newx < 4 && newy < 4) {
			if (insert[newx][newy] > 0) {
				int fishnum = insert[newx][newy];
				fish[fishnum].live = false;
				insert[x][y] = 0;
				insert[newx][newy] = -1;
				dfs(newx, newy, fish[fishnum].dir, sum + fishnum);
				fish[fishnum].live = true;
				insert[x][y] = -1;
				insert[newx][newy] = fishnum;
			}
		}
	}

	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++) {
			insert[i][j] = cinsert[i][j];
		}
	}

	for (int i = 1; i <= 16; i++) {
		fish[i] = cfish[i];
	}

	return;
}

int main(void) {

	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++) {
			int a, b;
			scanf("%d %d", &a, &b);
			insert[i][j] = a;
			fish[a].x = i;
			fish[a].y = j;
			fish[a].dir = b;
			fish[a].live = true;
		}
	}

	int zerofishnum = insert[0][0];
	insert[0][0] = -1;
	fish[zerofishnum].live = false;

	/*for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++) {
			printf("%d ", insert[i][j]);
		}
		printf("\n");
	}
	printf("\n");*/

	dfs(0, 0, fish[zerofishnum].dir, zerofishnum);

	printf("%d\n", result);

	return 0;
}