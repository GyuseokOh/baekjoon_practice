#include<stdio.h>
#include<string.h>
#include<string>
#include<map>

using namespace std;

int parent[200010];
int fnum[200010];
int pcount = 0;

int find(int cur) {
	if (parent[cur] == cur) {
		return cur;
	}

	return parent[cur] = find(parent[cur]);
}

void uni(int a, int b) {
	a = find(a);
	b = find(b);

	if (a != b) {
		if (a < b) {
			parent[b] = a;
			fnum[a] += fnum[b];
			fnum[b] = 1;
			printf("%d\n", fnum[a]);
		}
		else {
			parent[a] = b;
			fnum[b] += fnum[a];
			fnum[a] = 1;
			printf("%d\n", fnum[b]);
		}
	}
}

int main(void) {

	int t;

	scanf("%d", &t);

	while (t--) {
		int n;
		map<string, int> m;
		m.clear();
		scanf("%d", &n);
		pcount = 0;

		for(int i=0;i<n;i++) {
			char name1[30];
			char name2[30];
			scanf("%s %s", name1, name2);

			if (m[name1]==0) {
				//m.insert(pair<string, int>(name1, pcount));
				m[name1] = pcount;
				parent[pcount] = pcount;
				fnum[pcount] = 1;
				pcount++;
			}
			if (m[name2]==0) {
				//m.insert(pair<string, int>(name2, pcount));
				m[name2] = pcount;
				parent[pcount] = pcount;
				fnum[pcount] = 1;
				pcount++;
			}

			uni(m[name1], m[name2]);
		}

	}

	return 0;
}