#include<stdio.h>
#include<vector>
#include<queue>

using namespace std;

typedef struct {
	int node;
	int len;
}input;

typedef struct {
	int node;
	int cur_len;
}q_input;

vector<input> insert[100010];
bool visit1[100010];
bool visit2[100010];
int max_len = -1;
int max_index;
int n;
int result = 0;

void find(void) {

	queue<q_input> q;

	visit1[1] = true;
	q.push({ 1,0 });

	while (q.empty() != true) {
		q_input cur = q.front();
		q.pop();

		for (int i = 0; i < insert[cur.node].size(); i++) {
			input next = insert[cur.node][i];
			if (visit1[next.node] == false) {
				visit1[next.node] = true;
				q.push({ next.node,cur.cur_len + next.len });
				if (cur.cur_len + next.len > max_len) {
					max_len = cur.cur_len + next.len;
					max_index = next.node;
				}
			}
		}
	}

	max_len = -1;
	visit2[max_index] = true;
	q.push({ max_index,0 });

	while (q.empty() != true) {
		q_input cur = q.front();
		q.pop();

		for (int i = 0; i < insert[cur.node].size(); i++) {
			input next = insert[cur.node][i];
			if (visit2[next.node] == false) {
				visit2[next.node] = true;
				q.push({ next.node,cur.cur_len + next.len });
				if (cur.cur_len + next.len > max_len) {
					max_len = cur.cur_len + next.len;
					max_index = next.node;
				}
			}
		}
	}

	result += max_len;
}

int main(void) {

	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		int node;
		int a, b;

		scanf("%d", &node);

		while (1) {
			scanf("%d", &a);

			if (a == -1) {
				break;
			}
			scanf("%d", &b);

			insert[node].push_back({ a,b });
		}
	}

	find();

	printf("%d\n", result);

	return 0;
}