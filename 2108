#include<stdio.h>
#include<algorithm>

using namespace std;

int insert[500010];
int result_copy[500010];
int p[4010];
int m[4010];

bool inc(int a, int b) {
	return a < b;
}

int main(void) {

	int n;
	int result_count=0;
	int result;
	int max = -100000;
	double ave = 0;

	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%d", &insert[i]);
		if (insert[i] < 0) {
			int minu = -insert[i];
			m[minu]++;
		}
		else {
			p[insert[i]]++;
		}
		ave += (double)insert[i];
	}

	sort(insert, insert + n, inc);

	for (int i = 0; i <= 4000; i++) {
		if (p[i] > max) {
			max = p[i];
			result = i;
		}

		if (m[i] > max) {
			max = m[i];
			result = -i;
		}
	}

	for (int i = 0; i <= 4000; i++) {
		if (m[i] == max) {
			result_copy[result_count] = -i;
			result_count++;
		}
		if (p[i] == max) {
			result_copy[result_count] = i;
			result_count++;
		}
	}

	if (result_count != 1) {
		sort(result_copy, result_copy + result_count, inc);
		result = result_copy[1];
	}

	printf("%.0lf\n", ave / n);
	printf("%d\n", insert[n / 2]);
	printf("%d\n", result);
	printf("%d\n", insert[n - 1] - insert[0]);


	return 0;
}