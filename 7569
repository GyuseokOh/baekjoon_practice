#include<stdio.h>
#include<queue>

using namespace std;

typedef struct {
	int z;
	int x;
	int y;
}input;

int m, n, h;
int insert[110][110][110];
int zero_count = 0;

int z_dir[3] = { -1,1 };
int x_dir[4] = { 1,-1,0,0 };
int y_dir[4] = { 0,0,1,-1 };

queue<input> q;

int bfs(void) {

	int day = 0;

	while (q.empty() != true) {
		int size = q.size();

		while (size--) {
			int z = q.front().z;
			int x = q.front().x;
			int y = q.front().y;
			q.pop();

			for (int i = 0; i < 4; i++) {
				int cur_x = x + x_dir[i];
				int cur_y = y + y_dir[i];

				if (cur_x >= 0 && cur_y >= 0 && cur_x < n&&cur_y < m&&insert[z][cur_x][cur_y] == 0) {
					insert[z][cur_x][cur_y] = 1;
					q.push({ z, cur_x, cur_y });
					zero_count--;
				}
			}

			for (int i = 0; i < 2; i++) {
				int cur_z = z + z_dir[i];

				if (cur_z >= 0 && cur_z < h&&insert[cur_z][x][y] == 0) {
					insert[cur_z][x][y] = 1;
					q.push({ cur_z,x,y });
					zero_count--;
				}
			}
		}

		day++;

		if (zero_count <= 0) {
			return day;
		}
	}

	return -1;
}

int main(void) {

	scanf("%d %d %d", &m, &n, &h);

	for (int i = 0; i < h; i++) {
		for (int j = 0; j < n; j++) {
			for (int t = 0; t < m; t++) {
				scanf("%d", &insert[i][j][t]);

				if (insert[i][j][t] == 1) {
					q.push({ i,j,t });
				}
				if (insert[i][j][t] == 0) {
					zero_count++;
				}
			}
		}
	}

	if (zero_count == 0) {
		printf("0\n");
	}
	else {
		printf("%d\n", bfs());
	}

	return 0;
}
