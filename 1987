#include<stdio.h>
#include<vector>
#include<algorithm>

using namespace std;

char insert[30][30];
int x_dir[4] = { 0,0,1,-1 };
int y_dir[4] = { 1,-1,0,0 };
int r, c;
int max_result = -1;
vector<char> result;

void dfs(int x, int y) {

	result.push_back(insert[x][y]);

	int size = result.size();

	if (size > max_result) {
		max_result = size;
	}

	for (int i = 0; i < 4; i++) {
		int new_x = x + x_dir[i];
		int new_y = y + y_dir[i];

		if (new_x >= 0 && new_y >= 0 && new_x < r&&new_y < c) {
			if (find(result.begin(), result.end(), insert[new_x][new_y]) == result.end()) {
				dfs(new_x, new_y);
			}
		}
	}

	result.pop_back();
}

int main(void) {

	scanf("%d %d", &r, &c);

	for (int i = 0; i < r; i++) {
		scanf("%s", insert[i]);
	}

	dfs(0, 0);

	printf("%d\n", max_result);

	return 0;
}